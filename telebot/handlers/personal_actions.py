# –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –±—ñ–±–ª—ñ–æ—Ç–µ–∫ —ñ —Ñ–∞–π–ª—ñ–≤
from aiogram import types, Dispatcher
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Text
from aiogram.dispatcher.filters.state import State, StatesGroup

import re
import config
from bot import BotDB
from dispatcher import dp

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–ª–∞—Å—É –¥–ª—è FSM –º–∞—à–∏–Ω–∏
class FSM(StatesGroup):
    name = State()
    notise = State()
    value = State()

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ–º–∞–Ω–¥–∏ —Å—Ç–∞—Ä—Ç, —è–∫–∞ –∑–∞–ø–∏—Å—É—î –¥–∞–Ω–Ω—ñ —é–∑–µ—Ä–∞ —É –ë–î
@dp.message_handler(commands = "start")
async def start(message: types.Message):
    if(not BotDB.user_exists(message.from_user.id)):
        BotDB.add_user(message.from_user.id)
    await message.bot.send_message(message.from_user.id, "–ü—Ä–∏–≤—ñ—Ç!\n–í–≤–µ–¥—ñ—Ç—å /help –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–æ–ø–æ–º–æ–≥–∏")

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ–º–∞–Ω–¥–∏ —Ö–µ–ª–ø, —è–∫–∞ –ø—Ä–æ—Å—Ç–æ –≤–∏–≤–æ–¥–∏—Ç—å —Ç–µ–∫—Å—Ç –∑ –ø—ñ–¥—Å–∫–∞–∑–∫–æ—é
@dp.message_handler(commands = ("help"), commands_prefix = "/!")
async def help(message: types.Message):
    await message.reply("–ö–æ–º–∞–Ω–¥–∏ –¥–ª—è –∑–∞–Ω–µ—Å–µ–Ω–Ω—è –≤–∏—Ç—Ä–∞—Ç:\n"
                        "/spent /s !spent !s\n"
                        "–ö–æ–º–∞–Ω–¥–∏ –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ—Å—Ç–æ—Ä—ñ—ó –≤–∏—Ç—Ä–∞—Ç:\n"
                        "/history /h !history !h\n"
                        "–ü–æ –¥–µ—Ñ–æ–ª—Ç—É —ñ—Å—Ç–æ—Ä—ñ—ó –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î—Ç—å—Å—è –∑–∞ –≤–µ—Å—å —á–∞—Å\n"
                        "–ú–æ–∂–Ω–∞ –≤–∫–∞–∑–∞—Ç–∏ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ <i>all, day, week, month</i>\n"
                        )

# –ü–æ—á–∞—Ç–æ–∫ –¥—ñ–∞–ª–æ–≥—É –∑ –º–∞—à–∏–Ω–æ—é, —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ–º–∞–Ω–¥–∏ –¥–ª—è –∑–∞–ø–∏—Å—ñ–≤ –ø—Ä–æ –≤–∏—Ç—Ä–∞—Ç–∏
@dp.message_handler(commands = ("spent", "s"), commands_prefix = "/!")
async def cm_start(message: types.Message):
    await FSM.name.set()
    await message.reply("–í–∫–∞–∂—ñ—Ç—å –Ω–∞ —â–æ –≤–∏—Ç—Ä–∞—Ç–∏–ª–∏ –∫–æ—à—Ç–∏:\n /cancle –¥–ª—è –≤—ñ–¥–º—ñ–Ω–∏")

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ–º–∞–Ω–¥–∏ —è–∫–∞ –≤ –±—É–¥—å-—è–∫–∏–π –º–æ–º–µ–Ω—Ç –º–æ–∂–µ –∑—É–ø–∏–Ω–∏—Ç–∏ FSM –º–∞—à–∏–Ω—É
@dp.message_handler(state="*", commands='/cancle')
@dp.message_handler(Text(equals='/cancle',ignore_case=True), state="*")
async def cancle(message: types.Message, state: FSMContext):
    current_state = await state.get_state()
    if current_state is None:
        return
    await state.finish()
    await message.reply("‚ùå–í—ñ–¥–º—ñ–Ω–µ–Ω–æ")

# –ó–∞–ø–∏—Å—É—î—Ç—å—Å—è –ø–µ—Ä—à–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —ñ –±–æ—Ç –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å—Å—è –≤ —Ä–µ–∂–∏–º –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è –Ω–∞—Å—Ç—É–ø–Ω–æ—ó –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
@dp.message_handler(state=FSM.name)
async def load_name(message: types.Message, state: FSMContext):
    answer = message.text
    await state.update_data(name=answer)
    await message.reply("–í–∫–∞–∂—ñ—Ç—å –ø—Ä–∏–º—ñ—Ç–∫–∏:\n /cancle –¥–ª—è –≤—ñ–¥–º—ñ–Ω–∏")
    await FSM.notise.set()

# –ó–∞–ø–∏—Å—É—î—Ç—å—Å—è –¥—Ä—É–≥–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —ñ –±–æ—Ç –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å—Å—è –≤ —Ä–µ–∂–∏–º –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è –Ω–∞—Å—Ç—É–ø–Ω–æ—ó –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
@dp.message_handler(state=FSM.notise)
async def load_notise(message: types.Message, state: FSMContext):
    answer = message.text
    await state.update_data(notise=answer)
    await message.reply("–í–∫–∞–∂—ñ—Ç—å —Å–∫—ñ–ª—å–∫–∏ –≤–∏—Ç—Ä–∞—Ç–∏–ª–∏:\n /cancle –¥–ª—è –≤—ñ–¥–º—ñ–Ω–∏")
    await FSM.value.set()

# –ó–∞–ø–∏—Å—É—î—Ç—å—Å—è –æ—Å—Ç–∞–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á, –¥–∞–Ω–Ω—ñ –∑–∞–ø–∏—Å—É—é—Ç—å—Å—è —É –ë–î, FSM –º–∞—à–∏–Ω–∞ –≤—ñ–¥–∫–ª—é—á–∞—î—Ç—å—Å—è
@dp.message_handler(state=FSM.value)
async def load_value(message: types.Message, state: FSMContext):
    answer = message.text
    await state.update_data(value=answer)
    data = await state.get_data()
    name = data.get('name')
    notise = data.get('notise')
    value = data.get('value')

    """–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –≤—ñ–¥ —é–∑–µ—Ä–∞, —â–æ–± –∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤–∏–±—Ä–∞—Ç–∏ —Ç—ñ–ª—å–∫–∏ —Ü–∏—Ñ—Ä–∏ —ñ ","" –ø–µ—Ä–µ—Ç–≤–æ—Ä–∏—Ç–∏ –≤ "." """
    x = re.findall(r"\d+(?:.\d+)?", value)
    if(len(x)):
        value = float(x[0].replace(',', '.'))
        BotDB.add_record(message.from_user.id, name, notise, value)
        await message.reply(f'{name} {notise} {value}\n'"‚úÖ–ó–∞–ø–∏—Å –∑—Ä–æ–±–ª–µ–Ω–æ")
        await state.finish()
    else:
        await message.reply("‚ùå–í—ñ–¥–º—ñ–Ω–µ–Ω–æ\n–¢—Ä–µ–±–∞ –≤–≤–µ—Å—Ç–∏ —á–∏—Å–ª–æüò¢")
        await state.finish()

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ–º–∞–Ω–¥–∏ —è–∫–∞ –≤ –≤–∏–≤–æ–¥–∏—Ç—å —ñ—Å—Ç–æ—Ä—ñ—é –≤–∏—Ç—Ä–∞—Ç –∑–∞ –ø–µ–≤–Ω–∏–π –ø–µ—Ä—ñ–æ–¥
@dp.message_handler(commands = ("history", "h"), commands_prefix = "/!")
async def start(message: types.Message):
    cmd_variants = ('/history', '/h', '!history', '!h')
    within_als = {
        "day": ('today', 'day', '—Å—å–æ–≥–æ–¥–Ω—ñ', '–¥–µ–Ω—å'),
        "month": ('month', '–º—ñ—Å—è—Ü—å'),
        "year": ('year', '—Ä—ñ–∫'),
        "week": ('week', '—Ç–∏–∂–¥–µ–Ω—å'),
        "all": ('all', '–≤–µ—Å—å —á–∞—Å'),
    }

    """–í—ñ–¥–∫–∏–¥–∞–Ω–Ω—è —Ç–µ–∫—Å—Ç–æ–≤–æ—ó —á–∞—Å—Ç–∏–Ω–∏ –∫–æ–º–∞–Ω–¥–∏ —è–∫—É –ø—Ä–∏—Å–ª–∞–≤ —é–∑–µ—Ä, –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ç—ñ–ª—å–∫–∏  –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö –¥–∞–Ω–Ω–∏—Ö"""
    cmd = message.text
    for r in cmd_variants:
        cmd = cmd.replace(r, '').strip()

    """–í–∏—Ä–∞–∑ —è–∫–∏–π –±—É–¥–µ –ø–æ –¥–µ—Ñ–æ–ª—Ç—É (—ñ—Å—Ç–æ—Ä—ñ—è –∑–∞ –≤–µ—Å—å —á–∞—Å)"""
    within = 'all'
    if(len(cmd)):
        for k in within_als:
            for als in within_als[k]:
                if(als == cmd):
                    within = k

    """–û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∑ –ë–î"""
    records = BotDB.get_records(message.from_user.id, within)

    """–í–∏–≤–µ–¥–µ–Ω–Ω—è –ø–æ—Ç—Ä—ñ–±–Ω–∏—Ö –Ω–∞–º –¥–∞–Ω–Ω–∏—Ö –≤ –º–µ—Å–µ–Ω–¥–∂–µ—Ä"""
    if(len(records)):
        answer = f"üïò –Ü—Å—Ç–æ—Ä—ñ—è –≤–∏—Ç—Ä–∞—Ç –∑–∞ {within_als[within][-1]}\n\n"

        for r in records:
            answer += "<b>" + ("üíµ –í–∏—Ç—Ä–∞—Ç–∏") + "</b>"
            answer += f" - {r[2]}"
            answer += f" - {r[3]}"
            answer += f" <i><b>({r[4]}–≥—Ä–Ω)</b></i>"
            answer += f" <i>({r[5]})</i>\n"

        await message.reply(answer)
    else:
        await message.reply("–ó–∞–ø–∏—Å—ñ–≤ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!")